name: Build, Push a Docker Image to ECR, and Deploy it to AWS Lambda

on:
  workflow_dispatch:
  workflow_run:
    workflows: ["Infra Provisioning through Terraform"]
    types:
      - completed
  # push:
  #   branches:
  #     - main   
      
permissions:
  contents: read
  id-token: write  

jobs:
  build-and-push:
    if: ${{ github.event.workflow_run.conclusion == 'success' }} 
    runs-on: ubuntu-latest
    env:
        ECR_REGISTRY: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.ap-south-1.amazonaws.com  
        ECR_REPOSITORY: nodejs-repo
        IMAGE_TAG: "v1.${{ github.run_number }}"

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: configure aws credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-south-1  

    - name: Log in to Amazon ECR
      run: |
          aws ecr get-login-password --region ap-south-1 | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.ap-south-1.amazonaws.com
          
    - name: Build, Tag & Push Docker Image for Hello World Service
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -f backend/Dockerfile .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
    
    - name: Deploy to AWS Lambda
      run: |
        aws lambda update-function-code \
          --function-name nodejs-function \
          --image-uri $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

    - name: Cleanup local Docker images
      run: docker system prune -af
 

